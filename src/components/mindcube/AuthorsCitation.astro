---
// AuthorsCitation.astro - Citation information with placeholder content
---
<section id="citation" class="content-section">
  <div class="section-container">
    <h2 class="section-title">Citation</h2>

    {/* Citation Block */}
    <div class="citation-section">
      <p>If you find our work useful in your research, please cite:</p>
      <div class="citation-block">
        <div class="code-container">
          <button id="copy-button" aria-label="Copy citation" class="copy-button-corner">
            <svg class="copy-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round">
              <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
              <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
            </svg>
            <svg class="check-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="20 6 9 17 4 12"></polyline>
            </svg>
          </button>
          <pre><code>{`@misc{yin2025spatialmentalmodelinglimited,
      title={Spatial Mental Modeling from Limited Views}, 
      author={Baiqiao Yin and Qineng Wang and Pingyue Zhang and Jianshu Zhang and Kangrui Wang and Zihan Wang and Jieyu Zhang and Keshigeyan Chandrasegaran and Han Liu and Ranjay Krishna and Saining Xie and Manling Li and Jiajun Wu and Li Fei-Fei},
      year={2025},
      eprint={2506.21458},
      archivePrefix={arXiv},
      primaryClass={cs.AI},
      url={https://arxiv.org/abs/2506.21458}, 
}`}</code></pre>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Citation copy functionality
    const copyButton = document.getElementById('copy-button');
    const codeElement = document.querySelector('.citation-block pre code');
    
    if (copyButton && codeElement) {
      copyButton.addEventListener('click', async () => {
        const citationText = codeElement.textContent || '';
        
        try {
          await navigator.clipboard.writeText(citationText);
          
          // Visual feedback
          copyButton.classList.add('copied');
          
          // Reset after 2 seconds
          setTimeout(() => {
            copyButton.classList.remove('copied');
          }, 2000);
        } catch (err) {
          console.error('Failed to copy: ', err);
          copyButton.classList.add('copy-error');
          
          setTimeout(() => {
            copyButton.classList.remove('copy-error');
          }, 2000);
        }
      });
    }
  });
</script> 
